# 배관공 콰리오
'''
파이프에서 물이 새는 곳은 신기하게도 가장 왼쪽에서 정수만큼 떨어진 거리만 물이 샌다.
콰리오는 길이가 L인 테이프를 무한 개 가지고 있고, 이 테이프를 이용해서 물이 새는 것을 막으려고 한다.
물이 새는 곳의 위치와, 테이프의 길이 L이 주어졌을 때, 
콰리오가 필요한 테이프의 최소 개수를 구하는 프로그램을 작성하시오.
테이프를 자를 수는 없지만, 테이프를 겹쳐서 붙이는 것은 가능하다. 

[입력]
첫번째 줄에 물이 새는 곳의 개수 N과 테이프의 길이 L이 주어진다. (1 <= N, L <= 1000)
두번째 줄에는 물이 새는 곳의 위치가 주어진다. 
물이 새는 곳의 위치의 값은 1 이상, 1000 미만이다. 

4 2
1 2 100 101


[출력]
콰리오가 필요한 테이프의 개수를 출력한다.

2
'''

N, L = map(int,input().split())
arr = list(map(int,input().split()))
arr.sort()      # 우선 오름차순으로 정

cnt = 1         # 무조건 한개는 씀
c_position = arr[0]     # 초기 위치

for i in range(1, N):
    if arr[i] - c_position + 1 <= L:
        continue        # 테이프를 붙일 수 있는 범위 내에 있다면 넘어가고
    else:
        cnt += 1        # 안 닿는 곳에 있다면 새로운거
        c_position = arr[i]     # 위치 재설정

print(cnt)